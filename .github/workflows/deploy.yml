name: Deploy to Cloudflare Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  # Security and Quality Checks
  security-scan:
    name: Security & Quality Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Security audit
        run: |
          npm audit --audit-level=high || echo "Security audit completed"

      - name: Check for secrets in code
        run: |
          grep -r "api[_-]key\|password\|secret\|token" --include="*.js" --include="*.html" . | grep -v "placeholder\|example\|TODO" || echo "No secrets found"

      - name: Validate meta tags
        run: |
          grep -q "google-site-verification" index.html && echo "✓ Google verification found"
          grep -q "msvalidate" index.html && echo "✓ Bing verification found"
          grep -q "og:image" index.html && echo "✓ Open Graph image found"

  # Deploy to Cloudflare Pages
  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Pre-deployment checks
        run: |
          test -f index.html && echo "✓ index.html exists"
          test -f robots.txt && echo "✓ robots.txt exists"
          test -f sitemap.xml && echo "✓ sitemap.xml exists"
          test -f _headers && echo "✓ _headers exists"
          test -f _redirects && echo "✓ _redirects exists"

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler pages deploy . --project-name=flong-dev --compatibility-date=2024-08-15

      - name: Deploy Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          if [ -f wrangler.toml ]; then
            wrangler deploy
          fi

  # Post-deployment verification
  verify-deployment:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Check website availability
        run: |
          curl -f -s -o /dev/null https://flong.dev || (echo "Main site check failed" && exit 1)
          echo "✓ Main site is accessible"

      - name: Verify meta tags
        run: |
          curl -s https://flong.dev | grep -q "google-site-verification" && echo "✓ Google verification in deployed site"
          curl -s https://flong.dev | grep -q "Franco Longstaff" && echo "✓ Personal branding verified"

      - name: Test form endpoints
        run: |
          curl -f -s -o /dev/null https://flong.dev/ && echo "✓ Contact form accessible"

  # Security monitoring
  security-monitoring:
    name: Security Monitoring
    runs-on: ubuntu-latest
    needs: verify-deployment
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check security headers
        run: |
          headers=$(curl -s -I https://flong.dev)
          
          echo "$headers" | grep -q "X-Frame-Options" && echo "✓ X-Frame-Options header present"
          echo "$headers" | grep -q "X-Content-Type-Options" && echo "✓ X-Content-Type-Options header present"
          echo "$headers" | grep -q "Strict-Transport-Security" && echo "✓ HSTS header present"
          echo "$headers" | grep -q "Content-Security-Policy" && echo "✓ CSP header present"

      - name: SSL/TLS verification
        run: |
          echo | openssl s_client -servername flong.dev -connect flong.dev:443 2>/dev/null | openssl x509 -noout -dates
          echo "✓ SSL certificate verified"

      - name: DNS security check
        run: |
          dig TXT flong.dev | grep -q "spf1" && echo "✓ SPF record found" || echo "⚠ SPF record missing"
          dig TXT _dmarc.flong.dev | grep -q "DMARC1" && echo "✓ DMARC record found" || echo "⚠ DMARC record missing"